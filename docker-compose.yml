services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: routine-app
    ports:
      - "${APP_PORT}:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${JPA_HIBERNATE_DDL_AUTO}
#      - SPRING_JPA_SHOW_SQL=${JPA_SHOW_SQL}
      - SPRING_REDIS_HOST=${REDIS_HOST}
      - SPRING_REDIS_PORT=${REDIS_PORT}
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
      - redis
    networks:
      - routine-network
    env_file:
      - .env

  db:
    image: mysql:8.0
    container_name: routine-db
    ports:
      - "${DB_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - routine-network
    env_file:
      - .env

  redis:
    image: redis:7-alpine
    container_name: routine-redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data
    networks:
      - routine-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

volumes:
  mysql-data:
  redis-data:

networks:
  routine-network:
    driver: bridge